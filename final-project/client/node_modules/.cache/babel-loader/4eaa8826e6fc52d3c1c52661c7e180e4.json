{"ast":null,"code":"var _jsxFileName = \"/Users/poker/Desktop/Job-Tracking-Web-Application/final-project/client/src/components/Employment/Charts.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport axios from 'axios';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport CanvasJSReact from '../../assets/canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass Charts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalJobData: [],\n      relativeJobData: [],\n      economicActivityData: [],\n      techGrowthData: [],\n      lineChart: {},\n      barChart: {},\n      pieChart: {},\n      verticalBarChart: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/dashboard/employment').then(res => {\n      let data = res.data;\n      this.setState({\n        totalJobData: data.totalJob\n      });\n      this.setState({\n        relativeJobData: data.relativeJob\n      });\n      this.setState({\n        economicActivityData: data.economicActivity\n      });\n      this.setState({\n        techGrowthData: data.techGrowth\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  renderLineChart() {\n    this.state.lineChart = {\n      animationEnabled: true,\n      theme: \"light2\",\n      title: {\n        text: \"Total Number of Jobs and Percent Change (2001-2019)\"\n      },\n      axisY: {\n        title: \"Total Number of Jobs\",\n        crosshair: {\n          enabled: true,\n          snapToDataPoint: true\n        }\n      },\n      toolTip: {\n        shared: true\n      },\n      legend: {\n        cursor: \"pointer\",\n        verticalAlign: \"bottom\",\n        horizontalAlign: \"left\",\n        dockInsidePlotArea: true\n      },\n      data: [{\n        type: \"line\",\n        showInLegend: true,\n        name: \"Total Jobs\",\n        markerType: \"square\",\n        xValueFormatString: \"Q#, YYYY\",\n        color: \"#F08080\",\n        dataPoints: []\n      }]\n    };\n    return Object.keys(this.state.totalJobData).map((i, index) => {\n      let quarters = this.state.totalJobData[i].quarter;\n      let jobs = this.state.totalJobData[i].jobs;\n      this.state.lineChart.data[0].dataPoints.push({\n        label: quarters,\n        y: jobs\n      });\n    });\n  }\n\n  renderPieChart() {\n    this.state.pieChart = {\n      chart: {\n        type: 'pie'\n      },\n      title: {\n        text: 'Major Areas Of Economic Activity'\n      },\n      accessibility: {\n        announceNewData: {\n          enabled: true\n        },\n        point: {\n          valueSuffix: '%'\n        }\n      },\n      plotOptions: {\n        series: {\n          dataLabels: {\n            enabled: true,\n            format: '{point.name}: {point.y:.1f}%'\n          }\n        }\n      },\n      tooltip: {\n        headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\n        pointFormat: '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f}%</b> of total<br/>'\n      },\n      series: [{\n        name: \"Silicon Valley\",\n        colorByPoint: true,\n        data: []\n      }]\n    };\n    return Object.keys(this.state.economicActivityData).map((i, index) => {\n      let activity = this.state.economicActivityData[i].activity;\n      let percentages = this.state.economicActivityData[i].percentages;\n      this.state.pieChart.series[0].data.push({\n        name: activity,\n        y: percentages\n      });\n    });\n  }\n\n  renderBarChart() {\n    this.state.barChart = {\n      chart: {\n        type: 'bar'\n      },\n      title: {\n        text: 'Relative Job Growth'\n      },\n      xAxis: {\n        categories: ['2007 - 2019', '2010 - 2019', '2018 - 2019'],\n        title: {\n          text: null\n        }\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Percent Change in Total Numbers of Jobs (%)',\n          align: 'high'\n        },\n        labels: {\n          overflow: 'justify'\n        }\n      },\n      tooltip: {\n        valueSuffix: ' %'\n      },\n      plotOptions: {\n        bar: {\n          dataLabels: {\n            enabled: true\n          }\n        }\n      },\n      credits: {\n        enabled: false\n      },\n      series: []\n    };\n\n    for (var i = 0; i < 5; i++) {\n      this.state.barChart.series.push({\n        name: '',\n        data: []\n      });\n    }\n\n    Object.keys(this.state.relativeJobData).map((i, index) => {\n      let location = this.state.relativeJobData[i].location;\n      let percentages = this.state.relativeJobData[i].percentages;\n\n      switch (location) {\n        case 'Silicon Valley':\n          this.state.barChart.series[0].name = location;\n          this.state.barChart.series[0].data.push(percentages);\n          break;\n\n        case 'Santa Clara & San Mateo Counties':\n          this.state.barChart.series[1].name = location;\n          this.state.barChart.series[1].data.push(percentages);\n          break;\n\n        case 'Alameda County':\n          this.state.barChart.series[2].name = location;\n          this.state.barChart.series[2].data.push(percentages);\n          break;\n\n        case 'California':\n          this.state.barChart.series[3].name = location;\n          this.state.barChart.series[3].data.push(percentages);\n          break;\n\n        case 'United States':\n          this.state.barChart.series[4].name = location;\n          this.state.barChart.series[4].data.push(percentages);\n          break;\n      }\n    });\n  }\n\n  renderVerticalBarChart() {\n    this.state.verticalBarChart = {\n      animationEnabled: true,\n      theme: \"light2\",\n      title: {\n        text: \"Growth of Tech Talent in Top U.S. Tech Talent Centers (2013-2018)\"\n      },\n      axisY: {\n        title: \"Number of New Tech Jobs (thousands)\"\n      },\n      data: [{\n        type: \"column\",\n        dataPoints: []\n      }]\n    };\n    return Object.keys(this.state.techGrowthData).map((i, index) => {\n      let city = this.state.techGrowthData[i].city;\n      let jobs = this.state.techGrowthData[i].jobs;\n      this.state.verticalBarChart.data[0].dataPoints.push({\n        y: jobs,\n        label: city\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    }, this.renderLineChart(), /*#__PURE__*/React.createElement(CanvasJSChart, {\n      options: this.state.lineChart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    }, this.renderPieChart(), /*#__PURE__*/React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.pieChart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }\n    }, this.renderBarChart(), /*#__PURE__*/React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.barChart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, this.renderVerticalBarChart(), /*#__PURE__*/React.createElement(CanvasJSChart, {\n      options: this.state.verticalBarChart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default Charts;","map":{"version":3,"sources":["/Users/poker/Desktop/Job-Tracking-Web-Application/final-project/client/src/components/Employment/Charts.js"],"names":["React","Component","Container","Row","Col","axios","Highcharts","HighchartsReact","CanvasJSReact","CanvasJSChart","Charts","constructor","props","state","totalJobData","relativeJobData","economicActivityData","techGrowthData","lineChart","barChart","pieChart","verticalBarChart","componentDidMount","get","then","res","data","setState","totalJob","relativeJob","economicActivity","techGrowth","catch","err","console","log","renderLineChart","animationEnabled","theme","title","text","axisY","crosshair","enabled","snapToDataPoint","toolTip","shared","legend","cursor","verticalAlign","horizontalAlign","dockInsidePlotArea","type","showInLegend","name","markerType","xValueFormatString","color","dataPoints","Object","keys","map","i","index","quarters","quarter","jobs","push","label","y","renderPieChart","chart","accessibility","announceNewData","point","valueSuffix","plotOptions","series","dataLabels","format","tooltip","headerFormat","pointFormat","colorByPoint","activity","percentages","renderBarChart","xAxis","categories","yAxis","min","align","labels","overflow","bar","credits","location","renderVerticalBarChart","city","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport axios from 'axios';\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport CanvasJSReact from '../../assets/canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass Charts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            totalJobData: [],\n            relativeJobData: [],\n            economicActivityData: [],\n            techGrowthData: [],\n            lineChart: {},\n            barChart: {},\n            pieChart: {},\n            verticalBarChart: {}\n        };\n    }\n\n    componentDidMount() {\n        axios\n            .get('/dashboard/employment')\n            .then((res) => {\n                let data = res.data;\n                this.setState({ totalJobData: data.totalJob });\n                this.setState({ relativeJobData: data.relativeJob });\n                this.setState({ economicActivityData: data.economicActivity });\n                this.setState({ techGrowthData: data.techGrowth });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    renderLineChart() {\n        this.state.lineChart = {\n            animationEnabled: true,\n            theme: \"light2\",\n            title: {\n                text: \"Total Number of Jobs and Percent Change (2001-2019)\"\n            },\n            axisY: {\n                title: \"Total Number of Jobs\",\n                crosshair: {\n                    enabled: true,\n                    snapToDataPoint: true\n                }\n            },\n            toolTip: {\n                shared: true\n            },\n            legend: {\n                cursor: \"pointer\",\n                verticalAlign: \"bottom\",\n                horizontalAlign: \"left\",\n                dockInsidePlotArea: true\n            },\n            data: [{\n                type: \"line\",\n                showInLegend: true,\n                name: \"Total Jobs\",\n                markerType: \"square\",\n                xValueFormatString: \"Q#, YYYY\",\n                color: \"#F08080\",\n                dataPoints: []\n            }]\n        };\n        return Object.keys(this.state.totalJobData).map((i, index) => {\n            let quarters = this.state.totalJobData[i].quarter;\n            let jobs = this.state.totalJobData[i].jobs;\n            this.state.lineChart.data[0].dataPoints.push({ label: quarters, y: jobs });\n        });\n\n    }\n\n    renderPieChart() {\n        this.state.pieChart = {\n            chart: {\n                type: 'pie'\n            },\n            title: {\n                text: 'Major Areas Of Economic Activity'\n            },\n            accessibility: {\n                announceNewData: {\n                    enabled: true\n                },\n                point: {\n                    valueSuffix: '%'\n                }\n            },\n            plotOptions: {\n                series: {\n                    dataLabels: {\n                        enabled: true,\n                        format: '{point.name}: {point.y:.1f}%'\n                    }\n                }\n            },\n            tooltip: {\n                headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',\n                pointFormat: '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f}%</b> of total<br/>'\n            },\n            series: [\n                {\n                    name: \"Silicon Valley\",\n                    colorByPoint: true,\n                    data: []\n                }\n            ]\n        }\n        return Object.keys(this.state.economicActivityData).map((i, index) => {\n            let activity = this.state.economicActivityData[i].activity;\n            let percentages = this.state.economicActivityData[i].percentages;\n            this.state.pieChart.series[0].data.push({ name: activity, y: percentages });\n        });\n    }\n\n    renderBarChart() {\n        this.state.barChart = {\n            chart: {\n                type: 'bar'\n            },\n            title: {\n                text: 'Relative Job Growth'\n            },\n            xAxis: {\n                categories: ['2007 - 2019', '2010 - 2019', '2018 - 2019'],\n                title: { text: null }\n            },\n            yAxis: {\n                min: 0,\n                title: {\n                    text: 'Percent Change in Total Numbers of Jobs (%)',\n                    align: 'high'\n                },\n                labels: {\n                    overflow: 'justify'\n                }\n            },\n            tooltip: {\n                valueSuffix: ' %'\n            },\n            plotOptions: {\n                bar: {\n                    dataLabels: {\n                        enabled: true\n                    }\n                }\n            },\n            credits: {\n                enabled: false\n            },\n            series: []\n        }\n\n        for (var i = 0; i < 5; i++) {\n            this.state.barChart.series.push({ name: '', data: [] });\n        }\n\n        Object.keys(this.state.relativeJobData).map((i, index) => {\n            let location = this.state.relativeJobData[i].location;\n            let percentages = this.state.relativeJobData[i].percentages;\n            switch (location) {\n                case 'Silicon Valley':\n                    this.state.barChart.series[0].name = location;\n                    this.state.barChart.series[0].data.push(percentages);\n                    break;\n                case 'Santa Clara & San Mateo Counties':\n                    this.state.barChart.series[1].name = location;\n                    this.state.barChart.series[1].data.push(percentages);\n                    break;\n                case 'Alameda County':\n                    this.state.barChart.series[2].name = location;\n                    this.state.barChart.series[2].data.push(percentages);\n                    break;\n                case 'California':\n                    this.state.barChart.series[3].name = location;\n                    this.state.barChart.series[3].data.push(percentages);\n                    break;\n                case 'United States':\n                    this.state.barChart.series[4].name = location;\n                    this.state.barChart.series[4].data.push(percentages);\n                    break;\n            }\n        });\n    }\n\n    renderVerticalBarChart() {\n        this.state.verticalBarChart = {\n            animationEnabled: true,\n            theme: \"light2\",\n            title: {\n                text: \"Growth of Tech Talent in Top U.S. Tech Talent Centers (2013-2018)\"\n            },\n            axisY: {\n                title: \"Number of New Tech Jobs (thousands)\"\n            },\n            data: [{\n                type: \"column\",\n                dataPoints: []\n            }]\n        }\n        return Object.keys(this.state.techGrowthData).map((i, index) => {\n            let city = this.state.techGrowthData[i].city;\n            let jobs = this.state.techGrowthData[i].jobs;\n            this.state.verticalBarChart.data[0].dataPoints.push({ y: jobs, label: city });\n        });\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                {/* Columns are always 50% wide, on mobile and desktop */}\n                <Row>\n                    <Col xs={6}>\n                        {this.renderLineChart()}\n                        <CanvasJSChart options={this.state.lineChart} />\n                    </Col>\n                    <Col xs={6}>\n                        {this.renderPieChart()}\n                        <HighchartsReact\n                            highcharts={Highcharts}\n                            options={this.state.pieChart}\n                        />\n                    </Col>\n                    <Col xs={6}>\n                        {this.renderBarChart()}\n                        <HighchartsReact\n                            highcharts={Highcharts}\n                            options={this.state.barChart}\n                        />\n                    </Col>\n                    <Col xs={6}>\n                        {this.renderVerticalBarChart()}\n                        <CanvasJSChart options={this.state.verticalBarChart} />\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Charts;"]},"metadata":{},"sourceType":"module"}